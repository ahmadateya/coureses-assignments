// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t) == 1)   out(t+1) = out(t) + 1
 * else if (load(t) == 1)  out(t+1) = in(t)
 * else if (reset(t) == 1) out(t+1) = 0
 * else                    out(t+1) = out(t).
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];

    PARTS:
// Step 1: calculate everything at the first

    Register(in=resetMuxOut, load=true, out=out, out=regOut); // save the state
    Inc16(in=regOut, out=incOut);        // calc inc

// Step 2: calculate the branches (if elses)

    // if (inc(t) == 1) => out(t+1) = out(t) + 1
    Mux16(a=regOut, b=incOut, sel=inc, out=incMuxOut); // for the "inc"

    // else if (load(t) == 1)  out(t+1) = in(t)
    Mux16(a=incMuxOut, b=in, sel=load, out=loadMuxOut); // for the "load"

    // else if (reset(t) == 1) out(t+1) = 0
    Mux16(a=loadMuxOut, b[0..15]=false, sel=reset, out=resetMuxOut); // for the "reset"

    // else out(t+1) = out(t)
    // out the saved state
}
